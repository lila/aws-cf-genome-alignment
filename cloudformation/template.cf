{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description": "deploy whole genome alignment",
  "Parameters": {
    "InstanceType": {
      "Description": "Type of EC2 instance to launch",
      "Type": "String",
      "Default": "m1.large"
    },
	"User": {
	  "Description": "a specific username used to find boostrap files in s3",
	  "Type": "String",
	  "Default": "karanb"
	},
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String"
    },
    "AccessKey": {
	  "Description": "AWS Access key, used for cfn-init",
	  "Type": "String"
	},
	"SecretKey": {
	  "Description": "AWS Secret key, used for cfn-init",
	  "Type": "String"
	},
	"AccountNumber": {
	  "Description": "AWS accountid, used for starcluster",
	  "Type": "String"
	}
  },

  "Resources": {
    "head": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroups": [ { "Ref": "incoming" } ],
        "KeyName": { "Ref": "KeyName" },
        "ImageId": "ami-7341831a",
		"Volumes" : [ 
		          { "VolumeId" : { "Ref" : "NewVolume" },
		            "Device" : "/dev/sdk"
		          }],
		"UserData": { "Fn::Base64" : { "Fn::Join" : ["", [ 
			"#!/bin/bash\n",
			 	"cd /tmp; wget https://s3.amazonaws.com/",
				{ "Ref": "User" },
				".genome.alignment/chef/genome-alignment-cookbook.tar\n",
				"cd /var; tar -xvf /tmp/genome-alignment-cookbook.tar\n",
				"/opt/aws/bin/cfn-init -s ", 
					{ "Ref" : "AWS::StackName" }, 
					" -r head ", 
					"  --access-key=", 
					{ "Ref" : "AccessKey" }, 
					"  --secret-key=", 
					{ "Ref": "SecretKey" }, 
					"  --region ", 
					{ "Ref" : "AWS::Region" }, "\n",
				"chef-solo\n" 
			]] }
		}
	  },
 	  "Metadata" : {
			"AWS::CloudFormation::Init" : { 
				"config" : {
					"packages" : { 
						"rubygems" : { 
							"chef" : [ "0.10.2" ] 
						},
						"yum" : { 
							"gcc-c++" : [], 
							"ruby-devel" : [], 
							"make" : [], 
							"autoconf" : [], 
							"automake" : [], 
							"rubygems" : [],
							"python-devel" : []
						} 
					},
					"files" : { 
						"/etc/chef/solo.rb" : {
							"content" : { "Fn::Join" : ["", [ 
								"log_level :info\n", 
								"log_location \"/var/log/solo.log\"\n", 
								"cookbook_path \"/var/chef/cookbook\"\n", 
								"json_attribs \"/etc/chef/node.json\"\n" 
							]] }, 
							"mode" : "000644", 
							"owner" : "root", 
							"group" : "wheel"
						}, 
						"/etc/chef/node.json" : {
							"content" : { 
								"starcluster" : {
									"access_key_id" : {"Ref" : "AccessKey"}, 
									"secret_access_key"	: {"Ref" : "SecretKey"}, 
									"account_number"	: {"Ref" : "AccountNumber"} 
								},
								"ensembl" : [],
								"run_list": [ "recipe[starcluster]" ] 
							},
							"mode" : "000644", 
							"owner" : "root", 
							"group" : "wheel"
						}
					}
				}
			}
		}
    },
    "incoming": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Web security group, allows ssh",
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        } ]
      }
    },
    "NewVolume" : {
      "Type" : "AWS::EC2::Volume",
      "Properties" : {
        "SnapshotId" : "snap-97a09af6",
        "AvailabilityZone" : "us-east-1a",
        "Tags" : [{
          "Key" : "Dataset",
          "Value" : "Ensembl"
        }]
      }
    }
  },
  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "head" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "head", "AvailabilityZone" ] }
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "head", "PublicIp" ] }
    }
  }

}
